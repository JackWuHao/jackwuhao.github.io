<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://jackwuhao.github.io</id>
    <title>吴浩的个人博客</title>
    <updated>2019-07-26T14:25:02.246Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://jackwuhao.github.io"/>
    <link rel="self" href="https://jackwuhao.github.io/atom.xml"/>
    <subtitle>每一天都是学习的一天</subtitle>
    <logo>https://jackwuhao.github.io/images/avatar.png</logo>
    <icon>https://jackwuhao.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, 吴浩的个人博客</rights>
    <entry>
        <title type="html"><![CDATA[Pythpn 中 简单的爬虫]]></title>
        <id>https://jackwuhao.github.io/post/pythpn-zhong-jian-dan-de-pa-chong</id>
        <link href="https://jackwuhao.github.io/post/pythpn-zhong-jian-dan-de-pa-chong">
        </link>
        <updated>2019-07-26T13:52:19.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>基础环境的搭建</li>
<li>pip install requests, pip install  pandas    pip install bs4  ，获取请求头信息 http://httpbin.org/get</li>
</ul>
<ol>
<li>获取数据</li>
</ol>
<pre><code>URL = &quot;http://book.douban.com/latest&quot;

#请求数据
def get_data():
    url = URL
    headers = {&quot;User-Agent&quot;: &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0 Safari/605.1.15&quot;}
    data = requests.get(url,headers=headers)
    # print(data.text)
    return  data
</code></pre>
<ol start="2">
<li>解析数据</li>
</ol>
<pre><code>def parse_data(data):
    soup = BeautifulSoup(data.text,'lxml')
    # print(soup)
    books_left = soup.find('ul',{'class':'cover-col-4 clearfix'})
    books_left = books_left.find_all('li')
    books_right = soup.find('ul',{'class':'cover-col-4 pl20 clearfix'})
    books_right = books_right.find_all('li')
    books = list(books_left) + list(books_right)

    img_urls = []
    titles = []
    ratings = []
    authors = []
    details = []
    for book in books:
        img_url = book.find_all('a')[0].find('img').get('src')
        img_urls.append(img_url)
        title = book.find_all('a')[1].get_text()
        titles.append(title)
        print(title)

        #评价星级
        rating = book.find('p',{'class':'rating'}).get_text()
        rating = rating.replace('\n','').replace(' ','')
        ratings.append(rating)


        #作者
        author = book.find('p',{'class':'color-gray'}).get_text()
        author = author.replace('\n','').replace(' ','')
        authors.append(author)

        #图书简介
        detail = book.find_all('p')[2].get_text()
        detail = detail.replace('\n','').replace(' ','')
        details.append(detail)


    print('img_urls:',img_urls)

    print('titles:',titles)

    print('ratings:',ratings)

    print('authors',authors)

    print('details:',details)

    return img_urls,titles,ratings,authors,details
</code></pre>
<ol start="3">
<li>存储数据</li>
</ol>
<pre><code>#存储数据
def save_data(imgurls,titles,ratings,authors,details):
    result = pd.DataFrame()
    result['img_urls'] = imgurls
    result['titles'] = titles
    result['ratings'] = ratings
    result['authors'] = authors
    result['details'] = details
    result.to_csv('result.csv',index=None)
</code></pre>
<ul>
<li><a href="https://github.com/JackWuHao/crawer.git">资源下载</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python中sqlalchemy中ForeignKey的使用]]></title>
        <id>https://jackwuhao.github.io/post/python-zhong-sqlalchemy-zhong-foreignkey-de-shi-yong</id>
        <link href="https://jackwuhao.github.io/post/python-zhong-sqlalchemy-zhong-foreignkey-de-shi-yong">
        </link>
        <updated>2019-07-22T02:38:48.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>例子：</li>
<li>导入 from sqlalchemy import ForeignKey</li>
</ul>
<pre><code>class Company(Base):

   __tablename__ = 'company'

   name = Column(String(20), primary_key=True,autoincrement=True)
   location = Column(String(20))

   def __repr__(self):
       return &quot;name:{0} location:{1}&quot;.format(self.name,self.location)


class Phone(Base):

   __tablename__ = 'phone'

   id = Column(Integer,primary_key=True,autoincrement=True)
   model = Column(String(32))
   price = Column(String(32))
   company_name = Column(String(32),ForeignKey(&quot;company.name&quot;))
 
   def __repr__(self):
        return &quot;{0} model:{1},sales:{2}  price:{3}&quot;.format(self.id,self.model,self.company_name,self.price)

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[基于Python的文件查找软件]]></title>
        <id>https://jackwuhao.github.io/post/ji-yu-python-de-wen-jian-cha-zhao-ruan-jian</id>
        <link href="https://jackwuhao.github.io/post/ji-yu-python-de-wen-jian-cha-zhao-ruan-jian">
        </link>
        <updated>2019-07-16T01:50:41.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li><strong>在学习到tkiner时，做的一个练习</strong></li>
<li><strong>首先这个软件大致可分为3部分</strong></li>
<li><strong>UI界面的绘制，使用label  ,button ,scrollbar, listBox ，Entry这些控件</strong></li>
<li><strong>os系统类的使用,获取系统当前目录路径，上级目录路径</strong></li>
<li><strong>核心:控件之前的联动，获取目录路径出错处理</strong></li>
<li>最重要的处理逻辑如下：</li>
</ul>
<pre><code>def doLS(self, en=None):
      error=''
      tdir = self.cmd.get()
      if not tdir : tdir = os.curdir
      if not os.path.exists(tdir):
          error = tdir + ': no such file'
      elif not os.path.isdir(tdir):
          error = tdir + ':not a directory'
      if error:
          self.cmd.set(error)
          self.top.update()
          sleep(2)
          if not (hasattr(self, 'last') and self.last):
              self.last = os.curdir

          self.cmd.set(self.last)
          self.dirs.config(selectbackground='LightSkyBlue')
          self.top.update()
          return
          self.cmd.set(self.last)
          self.dirs.config(selectbackground='LightSkyBlue')
          self.top.update()
          return

      self.cmd.set('FETCHING DIRECTORY CONTENTS...')
      self.top.update()
      dirList = os.listdir(tdir)
      dirList.sort()
      os.chdir(tdir)

      self.dirl.config(text=os.getcwd())
      self.dirs.delete(0, END)
      self.dirs.insert(END, os.curdir)#当前目录macos .
      self.dirs.insert(END, os.pardir)#上级目录 ..
      for eachFile in dirList:
          self.dirs.insert(END, eachFile)
      self.cmd.set(os.curdir)
      self.dirs.config(selectbackground='LightSkyBlue')
</code></pre>
<ul>
<li><a href="https://github.com/JackWuHao/fileSeachSoftWare.git">资源下载</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pycharm 最新破解方案]]></title>
        <id>https://jackwuhao.github.io/post/pycharm-zui-xin-po-jie-fang-an</id>
        <link href="https://jackwuhao.github.io/post/pycharm-zui-xin-po-jie-fang-an">
        </link>
        <updated>2019-07-15T01:43:37.000Z</updated>
        <content type="html"><![CDATA[<p>#这里以mac为例进行说明windows一样，操作方法一样</p>
<ol>
<li><img src="https://jackwuhao.github.io/post-images/1563155586656.png" alt=""></li>
<li><img src="https://jackwuhao.github.io/post-images/1563155601503.png" alt=""></li>
<li><img src="https://jackwuhao.github.io/post-images/1563155662581.png" alt="">
4.最后保存退出
5.<img src="https://jackwuhao.github.io/post-images/1563155817633.png" alt="">
6.到 bin目录添加下载的.jar文件
7.在pycharm.vmoptions里面最后一行追加 <img src="https://jackwuhao.github.io/post-images/1563156001773.png" alt="">就是.jar文件的文件路径
8.退出重新进入pycharm,随便打开一个项目，没有新建也行<img src="https://jackwuhao.github.io/post-images/1563156147301.png" alt="">
9.最后选择<img src="https://jackwuhao.github.io/post-images/1563156193327.png" alt="">点击注册OK</li>
</ol>
<ul>
<li>资源地址:https://github.com/JackWuHao/file.git</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python中sort和sorted的区别]]></title>
        <id>https://jackwuhao.github.io/post/python-zhong-sort-he-sorted-de-qu-bie</id>
        <link href="https://jackwuhao.github.io/post/python-zhong-sort-he-sorted-de-qu-bie">
        </link>
        <updated>2019-07-15T01:17:38.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>
<p><strong>sort</strong></p>
</li>
<li>
<p>a = [1, 2, -5, 6, 7]</p>
</li>
<li>
<p>a.sort(reverse=True)</p>
</li>
<li>
<p>输出：a : [7, 6, 2, 1, -5]</p>
</li>
<li>
<p><strong>sorted:</strong></p>
</li>
<li>
<p>a = [1, 2, -5, 6, 7]</p>
</li>
<li>
<p>b = sorted(a, reverse=True)</p>
</li>
<li>
<p>输出b:[7, 6, 2, 1, -5]</p>
</li>
<li>
<p>输出a:[1, 2, -5, 6, 7]</p>
</li>
<li>
<p><strong>总结：sort方法和sorted方法大致用法，但是sort方法会导致list本身数据结构的变化，sorted在使用时会把之前的数据copy一份，在copy的那份进行排序</strong></p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[小草]]></title>
        <id>https://jackwuhao.github.io/post/xiao-cao</id>
        <link href="https://jackwuhao.github.io/post/xiao-cao">
        </link>
        <updated>2019-07-13T04:43:09.000Z</updated>
        <content type="html"><![CDATA[<p>这是使用GitHubPage+gridea创建的网站，很方便用来使用</p>
]]></content>
    </entry>
</feed>