<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://jackwuhao.github.io</id>
    <title>吴浩的个人博客</title>
    <updated>2019-09-18T09:57:43.398Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://jackwuhao.github.io"/>
    <link rel="self" href="https://jackwuhao.github.io/atom.xml"/>
    <subtitle>每一天都是学习的一天</subtitle>
    <logo>https://jackwuhao.github.io/images/avatar.png</logo>
    <icon>https://jackwuhao.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, 吴浩的个人博客</rights>
    <entry>
        <title type="html"><![CDATA[vue -cli  搭建vue项目实战总结1（首页）]]></title>
        <id>https://jackwuhao.github.io/post/vue-cli-2-xiang-mu-shi-zhan-zong-jie-shou-ye</id>
        <link href="https://jackwuhao.github.io/post/vue-cli-2-xiang-mu-shi-zhan-zong-jie-shou-ye">
        </link>
        <updated>2019-09-18T09:28:18.000Z</updated>
        <content type="html"><![CDATA[<h1 id="撒花搞了两天首页终于搞定了">撒花，搞了两天首页终于搞定了</h1>
<p>总结time:</p>
<ol>
<li>由于自己看文档开搞，过程很曲折，踩了一堆坑，都是泪呀，文档一定要详细，有问题要深究，所有的问题都可以解决</li>
<li>学习制作了组件，整个vue项目的架构引用如何运行，如何加载和引用第三方组件
3.请求axios库的简单使用，利用postman 自定义api数据
4.解决一些简单npm的报错问题<br>
<img src="https://jackwuhao.github.io/post-images/1568799992710.png" alt=""><br>
<a href="https://github.com/JackWuHao/vue-Test.git">资源下载</a></li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[mac 上如何安装及使用vue]]></title>
        <id>https://jackwuhao.github.io/post/mac-shang-ru-he-an-zhuang-ji-shi-yong-vue</id>
        <link href="https://jackwuhao.github.io/post/mac-shang-ru-he-an-zhuang-ji-shi-yong-vue">
        </link>
        <updated>2019-09-16T07:31:25.000Z</updated>
        <content type="html"><![CDATA[<h1 id="最近在看vue-记录一次安装过程避免以后再踩坑"><strong>最近在看vue ,记录一次安装过程避免以后再踩坑</strong></h1>
<p>1.需要先安装node <a href="https://nodejs.org/zh-cn/download/">node.js 官方下载</a></p>
<p>2.查看node 版本:</p>
<pre><code>node -v
</code></pre>
<p>3.查看npm版本：</p>
<pre><code>npm  -v
</code></pre>
<p>4.全局安装依赖包mac下需要加sudo命令:</p>
<pre><code>sudo npm install -g webpack
</code></pre>
<p>5.全局安装vue-ci 同上：</p>
<pre><code>sudo npm install webpack -g vue-cli
</code></pre>
<p>6.查看vue版本</p>
<pre><code>vue  -V
</code></pre>
<p>7.创建项目（后面的的项目名字vue-test 可替换成你的）</p>
<pre><code>cd  XXXX(你要创建的目录)
vue init webpack  vue-test
</code></pre>
<p>8.然后一路enter键，需要填的填下，不想填能跳过的直接跳过<br>
9.安装依赖</p>
<pre><code>cd   vue-test (你创建的项目名称)
npm install
</code></pre>
<p>10.启动项目 (测试环境，本地自带node服务器)</p>
<pre><code>npm run dev
</code></pre>
<p>11.发布项目（正式环境）</p>
<pre><code>npm run build 
</code></pre>
<p><a href="https://github.com/JackWuHao/vue-Test.git">资源下载</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[转载  iOS性能优化]]></title>
        <id>https://jackwuhao.github.io/post/zhuan-zai-ios-xing-neng-you-hua</id>
        <link href="https://jackwuhao.github.io/post/zhuan-zai-ios-xing-neng-you-hua">
        </link>
        <updated>2019-09-11T03:49:56.000Z</updated>
        <content type="html"><![CDATA[<p><strong>总结的很到位学习了</strong>
<a href="https://ityongzhen.github.io/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.html">IOS 性能优化</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[学习 -  深度学习的经典模型线性回归]]></title>
        <id>https://jackwuhao.github.io/post/xue-xi-shen-du-xue-xi-de-jing-dian-mo-xing-xian-xing-hui-gui</id>
        <link href="https://jackwuhao.github.io/post/xue-xi-shen-du-xue-xi-de-jing-dian-mo-xing-xian-xing-hui-gui">
        </link>
        <updated>2019-09-10T08:15:44.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>这段时间一直在学习深度学习，之前学习mxnet框架的看的很蛋疼，跑demo 是真的费劲，后来果断放弃，找了国内的深度学习框架，一直听说百度比较强，就入坑了飞浆</li>
</ul>
<ol>
<li><strong>环境配置</strong></li>
</ol>
<ul>
<li>开发工具 pycharm,建议安装在虚拟环境中，避免环境混乱，尤其多版本的python的时候</li>
<li><a href="https://www.paddlepaddle.org.cn/start">安装依赖 </a></li>
</ul>
<ol start="2">
<li><strong>线性回归</strong></li>
</ol>
<ul>
<li>
<p>模型定义:
<img src="https://jackwuhao.github.io/post-images/1568104549162.png" alt=""></p>
</li>
<li>
<p>运行后结果：
<img src="https://jackwuhao.github.io/post-images/1568104680244.png" alt="">							
<img src="https://jackwuhao.github.io/post-images/1568104689499.png" alt=""></p>
</li>
<li>
<p><a href="https://github.com/JackWuHao/LineTrain.git">代码下载</a></p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[go的一些学习]]></title>
        <id>https://jackwuhao.github.io/post/go-de-yi-xie-xue-xi</id>
        <link href="https://jackwuhao.github.io/post/go-de-yi-xie-xue-xi">
        </link>
        <updated>2019-09-04T09:22:38.000Z</updated>
        <content type="html"><![CDATA[<h1 id="关于go-的接口声明的学习的测试demo">关于go 的接口声明的学习的测试Demo</h1>
<p><a href="https://github.com/JackWuHao/goDemo.git">资源下载</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[IOS 自动化打包以及上传到fir上]]></title>
        <id>https://jackwuhao.github.io/post/ios-zi-dong-hua-da-bao-yi-ji-shang-chuan-dao-fir-shang</id>
        <link href="https://jackwuhao.github.io/post/ios-zi-dong-hua-da-bao-yi-ji-shang-chuan-dao-fir-shang">
        </link>
        <updated>2019-08-29T08:20:51.000Z</updated>
        <content type="html"><![CDATA[<h1 id="ios-通过ruby-脚本实现自动化打包以及上传到fir上">IOS 通过ruby 脚本实现自动化打包以及上传到fir上</h1>
<p><a href="https://github.com/JackWuHao/-fir-.git">资源下载</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[formTable的自定义处理]]></title>
        <id>https://jackwuhao.github.io/post/formtable-de-zi-ding-yi-chu-li</id>
        <link href="https://jackwuhao.github.io/post/formtable-de-zi-ding-yi-chu-li">
        </link>
        <updated>2019-08-06T03:37:41.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>自定义的formTable</li>
<li><img src="https://jackwuhao.github.io/post-images/1565071782719.png" alt=""></li>
<li><a href="https://github.com/JackWuHao/formCutomer.git">资源下载</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[python 中关于构建cgi应用程序（坑是真的多）]]></title>
        <id>https://jackwuhao.github.io/post/python-zhong-guan-yu-gou-jian-cgi-ying-yong-cheng-xu-keng-shi-zhen-de-duo</id>
        <link href="https://jackwuhao.github.io/post/python-zhong-guan-yu-gou-jian-cgi-ying-yong-cheng-xu-keng-shi-zhen-de-duo">
        </link>
        <updated>2019-08-01T07:14:11.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>首先养成一个良好的习惯</li>
</ol>
<pre><code>#!/usr/bin/python3
# -*- coding: utf-8 -*-
</code></pre>
<p>在你用的每一个.py文件的头部引入
2. 创建一个类似的目录结构 记住一定要有cgi-bin 这个目录其他随意
<img src="https://jackwuhao.github.io/post-images/1564644094446.png" alt="">
记住cgi-bin里面的.py文件要与.htm文件名一直
贴下我的index.html的code</p>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;title&gt;http,cgi模块test&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;form action=&quot;./cgi-bin/index.py&quot; method=&quot;get&quot;&gt;
    &lt;label&gt;用户名: &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;/label&gt;&lt;br&gt;
    密码: &lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;br&gt;
    &lt;!-- 	&lt;input type=&quot;hidden&quot; name=&quot;id&quot; value=&quot;20&quot;&gt; --&gt;
    &lt;input type=&quot;submit&quot;&gt;
&lt;/form&gt;
&lt;/body&gt;

&lt;/html&gt;
</code></pre>
<p>3.关于搭建和启动web服务器我这里就不BB了，不懂得可以看我的上一篇文章</p>
<p>4.启动服务器你以为game over了 吗，这时你点击提交提交按钮，会提示你ERROR response ?????,关于这个错误，我百思而无一解，然后熟练的打开了，百度（ps,没钱翻墙了）,一大堆，然而是真的坑没有一点有用的，我照着试一试的心态，去执行了一下.py文件，然后再打开，OK了</p>
<p>5.下面附上正确的姿势
<img src="https://jackwuhao.github.io/post-images/1564644882235.png" alt="">
6.重新运行web服务器 ，这才gameover!</p>
<ul>
<li><a href="https://github.com/JackWuHao/cgi.git">资源下载</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[python 简单的Web服务器]]></title>
        <id>https://jackwuhao.github.io/post/python-jian-dan-de-web-fu-wu-qi</id>
        <link href="https://jackwuhao.github.io/post/python-jian-dan-de-web-fu-wu-qi">
        </link>
        <updated>2019-07-30T03:24:58.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>关于CGIGHTTPServer:</li>
<li>基于python3   新建一个webServiceFile</li>
<li>新建一个html.index ,内容随意</li>
<li>新建一个pythonService.py</li>
</ul>
<pre><code>from http.server import HTTPServer, CGIHTTPRequestHandel 
prot = 4419  #随意自定义，如果放服务器的话，记着放开端口
htpp = HTTPServer(('',port),CGIHTTPRequestHandel )
http.serve_forever()
</code></pre>
<ul>
<li>调用时</li>
</ul>
<pre><code> python3  pythonService.py  
</code></pre>
<ul>
<li>一个简单的web服务器就搭建起来了</li>
<li>附截图
<img src="https://jackwuhao.github.io/post-images/1564457711082.jpeg" alt=""></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pythpn 中 简单的爬虫]]></title>
        <id>https://jackwuhao.github.io/post/pythpn-zhong-jian-dan-de-pa-chong</id>
        <link href="https://jackwuhao.github.io/post/pythpn-zhong-jian-dan-de-pa-chong">
        </link>
        <updated>2019-07-26T13:52:19.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>基础环境的搭建</li>
<li>pip install requests, pip install  pandas    pip install bs4  ，获取请求头信息 http://httpbin.org/get</li>
</ul>
<ol>
<li>获取数据</li>
</ol>
<pre><code>URL = &quot;http://book.douban.com/latest&quot;

#请求数据
def get_data():
    url = URL
    headers = {&quot;User-Agent&quot;: &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0 Safari/605.1.15&quot;}
    data = requests.get(url,headers=headers)
    # print(data.text)
    return  data
</code></pre>
<ol start="2">
<li>解析数据</li>
</ol>
<pre><code>def parse_data(data):
    soup = BeautifulSoup(data.text,'lxml')
    # print(soup)
    books_left = soup.find('ul',{'class':'cover-col-4 clearfix'})
    books_left = books_left.find_all('li')
    books_right = soup.find('ul',{'class':'cover-col-4 pl20 clearfix'})
    books_right = books_right.find_all('li')
    books = list(books_left) + list(books_right)

    img_urls = []
    titles = []
    ratings = []
    authors = []
    details = []
    for book in books:
        img_url = book.find_all('a')[0].find('img').get('src')
        img_urls.append(img_url)
        title = book.find_all('a')[1].get_text()
        titles.append(title)
        print(title)

        #评价星级
        rating = book.find('p',{'class':'rating'}).get_text()
        rating = rating.replace('\n','').replace(' ','')
        ratings.append(rating)


        #作者
        author = book.find('p',{'class':'color-gray'}).get_text()
        author = author.replace('\n','').replace(' ','')
        authors.append(author)

        #图书简介
        detail = book.find_all('p')[2].get_text()
        detail = detail.replace('\n','').replace(' ','')
        details.append(detail)


    print('img_urls:',img_urls)

    print('titles:',titles)

    print('ratings:',ratings)

    print('authors',authors)

    print('details:',details)

    return img_urls,titles,ratings,authors,details
</code></pre>
<ol start="3">
<li>存储数据</li>
</ol>
<pre><code>#存储数据
def save_data(imgurls,titles,ratings,authors,details):
    result = pd.DataFrame()
    result['img_urls'] = imgurls
    result['titles'] = titles
    result['ratings'] = ratings
    result['authors'] = authors
    result['details'] = details
    result.to_csv('result.csv',index=None)
</code></pre>
<ul>
<li><a href="https://github.com/JackWuHao/crawer.git">资源下载</a></li>
</ul>
]]></content>
    </entry>
</feed>